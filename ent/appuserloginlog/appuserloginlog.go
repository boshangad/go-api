// Code generated by entc, DO NOT EDIT.

package appuserloginlog

const (
	// Label holds the string label denoting the appuserloginlog type in the database.
	Label = "app_user_login_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldAppUserID holds the string denoting the app_user_id field in the database.
	FieldAppUserID = "app_user_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldLoginTypeID holds the string denoting the login_type_id field in the database.
	FieldLoginTypeID = "login_type_id"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "app"
	// EdgeAppUser holds the string denoting the appuser edge name in mutations.
	EdgeAppUser = "appUser"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the appuserloginlog in the database.
	Table = "app_user_login_log"
	// AppTable is the table that holds the app relation/edge.
	AppTable = "app_user_login_log"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "app"
	// AppColumn is the table column denoting the app relation/edge.
	AppColumn = "app_id"
	// AppUserTable is the table that holds the appUser relation/edge.
	AppUserTable = "app_user_login_log"
	// AppUserInverseTable is the table name for the AppUser entity.
	// It exists in this package in order to avoid circular dependency with the "appuser" package.
	AppUserInverseTable = "app_user"
	// AppUserColumn is the table column denoting the appUser relation/edge.
	AppUserColumn = "app_user_id"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "app_user_login_log"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "user"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for appuserloginlog fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldAppID,
	FieldAppUserID,
	FieldUserID,
	FieldLoginTypeID,
	FieldIP,
	FieldContent,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime int64
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID uint64
	// DefaultAppUserID holds the default value on creation for the "app_user_id" field.
	DefaultAppUserID uint64
	// DefaultUserID holds the default value on creation for the "user_id" field.
	DefaultUserID uint64
	// DefaultLoginTypeID holds the default value on creation for the "login_type_id" field.
	DefaultLoginTypeID uint
	// DefaultIP holds the default value on creation for the "ip" field.
	DefaultIP string
	// IPValidator is a validator for the "ip" field. It is called by the builders before save.
	IPValidator func(string) error
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint
)
