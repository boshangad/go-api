// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AppColumns holds the columns for the "app" table.
	AppColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "delete_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_by", Type: field.TypeUint64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeUint64, Default: 0},
		{Name: "alias", Type: field.TypeString, Unique: true, SchemaType: map[string]string{"mysql": "char(36)"}},
		{Name: "type_id", Type: field.TypeUint64, Default: 0},
		{Name: "title", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "intro", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "mp_origin_id", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "app_id", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "app_secret", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "has_payment_auth", Type: field.TypeBool, Default: false},
		{Name: "register_user_number", Type: field.TypeUint64, Default: 0},
		{Name: "status", Type: field.TypeUint, Default: 0},
	}
	// AppTable holds the schema information for the "app" table.
	AppTable = &schema.Table{
		Name:       "app",
		Columns:    AppColumns,
		PrimaryKey: []*schema.Column{AppColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "app_app_id",
				Unique:  false,
				Columns: []*schema.Column{AppColumns[11]},
			},
		},
	}
	// AppOptionColumns holds the columns for the "app_option" table.
	AppOptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_by", Type: field.TypeUint64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeUint64, Default: 0},
		{Name: "title", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "description", Type: field.TypeString, Size: 225, Default: ""},
		{Name: "name", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "value", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "expire_time", Type: field.TypeUint64, Default: 0},
		{Name: "edit_type", Type: field.TypeUint, Default: 0},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
	}
	// AppOptionTable holds the schema information for the "app_option" table.
	AppOptionTable = &schema.Table{
		Name:       "app_option",
		Columns:    AppOptionColumns,
		PrimaryKey: []*schema.Column{AppOptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_option_app_appOptions",
				Columns:    []*schema.Column{AppOptionColumns[11]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appoption_app_id",
				Unique:  false,
				Columns: []*schema.Column{AppOptionColumns[11]},
			},
			{
				Name:    "appoption_name",
				Unique:  false,
				Columns: []*schema.Column{AppOptionColumns[7]},
			},
		},
	}
	// AppUserColumns holds the columns for the "app_user" table.
	AppUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "open_id", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "unionid", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "session_key", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "is_load_user_profile", Type: field.TypeBool, Default: false},
		{Name: "nickname", Type: field.TypeString, Size: 64, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "avatar", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "avatar_url", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "gender", Type: field.TypeUint, Default: 0},
		{Name: "county", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "country_code", Type: field.TypeString, Size: 20, Default: ""},
		{Name: "province", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "city", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "language", Type: field.TypeString, Size: 20, Default: "zh_CN"},
		{Name: "phone_number", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "pure_phone_number", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "watermark", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "load_user_profile_time", Type: field.TypeUint64, Default: 0},
		{Name: "last_login_time", Type: field.TypeUint64, Default: 0},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
	}
	// AppUserTable holds the schema information for the "app_user" table.
	AppUserTable = &schema.Table{
		Name:       "app_user",
		Columns:    AppUserColumns,
		PrimaryKey: []*schema.Column{AppUserColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_user_app_app",
				Columns:    []*schema.Column{AppUserColumns[21]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "app_user_user_user",
				Columns:    []*schema.Column{AppUserColumns[22]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appuser_app_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserColumns[21]},
			},
			{
				Name:    "appuser_user_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserColumns[22]},
			},
			{
				Name:    "appuser_open_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserColumns[3]},
			},
			{
				Name:    "appuser_unionid",
				Unique:  false,
				Columns: []*schema.Column{AppUserColumns[4]},
			},
		},
	}
	// AppUserLoginLogColumns holds the columns for the "app_user_login_log" table.
	AppUserLoginLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "login_type_id", Type: field.TypeUint, Default: 0},
		{Name: "ip", Type: field.TypeString, Size: 16, Default: "127.0.0.1"},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint, Default: 0},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
		{Name: "app_user_id", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
	}
	// AppUserLoginLogTable holds the schema information for the "app_user_login_log" table.
	AppUserLoginLogTable = &schema.Table{
		Name:       "app_user_login_log",
		Columns:    AppUserLoginLogColumns,
		PrimaryKey: []*schema.Column{AppUserLoginLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_user_login_log_app_app",
				Columns:    []*schema.Column{AppUserLoginLogColumns[6]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "app_user_login_log_app_user_appUser",
				Columns:    []*schema.Column{AppUserLoginLogColumns[7]},
				RefColumns: []*schema.Column{AppUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "app_user_login_log_user_user",
				Columns:    []*schema.Column{AppUserLoginLogColumns[8]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appuserloginlog_app_user_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserLoginLogColumns[7]},
			},
		},
	}
	// AppUserTokenColumns holds the columns for the "app_user_token" table.
	AppUserTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "client_version", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "ip", Type: field.TypeString, Size: 16, Default: "127.0.0.1"},
		{Name: "expire_time", Type: field.TypeUint64, Default: 0},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
		{Name: "app_user_id", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
	}
	// AppUserTokenTable holds the schema information for the "app_user_token" table.
	AppUserTokenTable = &schema.Table{
		Name:       "app_user_token",
		Columns:    AppUserTokenColumns,
		PrimaryKey: []*schema.Column{AppUserTokenColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_user_token_app_app",
				Columns:    []*schema.Column{AppUserTokenColumns[6]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "app_user_token_app_user_appUser",
				Columns:    []*schema.Column{AppUserTokenColumns[7]},
				RefColumns: []*schema.Column{AppUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "app_user_token_user_user",
				Columns:    []*schema.Column{AppUserTokenColumns[8]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appusertoken_app_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserTokenColumns[6]},
			},
			{
				Name:    "appusertoken_app_user_id",
				Unique:  false,
				Columns: []*schema.Column{AppUserTokenColumns[7]},
			},
			{
				Name:    "appusertoken_uuid",
				Unique:  false,
				Columns: []*schema.Column{AppUserTokenColumns[3]},
			},
		},
	}
	// AuthAssgimentsColumns holds the columns for the "auth_assgiments" table.
	AuthAssgimentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AuthAssgimentsTable holds the schema information for the "auth_assgiments" table.
	AuthAssgimentsTable = &schema.Table{
		Name:       "auth_assgiments",
		Columns:    AuthAssgimentsColumns,
		PrimaryKey: []*schema.Column{AuthAssgimentsColumns[0]},
	}
	// AuthItemsColumns holds the columns for the "auth_items" table.
	AuthItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AuthItemsTable holds the schema information for the "auth_items" table.
	AuthItemsTable = &schema.Table{
		Name:       "auth_items",
		Columns:    AuthItemsColumns,
		PrimaryKey: []*schema.Column{AuthItemsColumns[0]},
	}
	// AuthItemChildsColumns holds the columns for the "auth_item_childs" table.
	AuthItemChildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AuthItemChildsTable holds the schema information for the "auth_item_childs" table.
	AuthItemChildsTable = &schema.Table{
		Name:       "auth_item_childs",
		Columns:    AuthItemChildsColumns,
		PrimaryKey: []*schema.Column{AuthItemChildsColumns[0]},
	}
	// AuthRolesColumns holds the columns for the "auth_roles" table.
	AuthRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AuthRolesTable holds the schema information for the "auth_roles" table.
	AuthRolesTable = &schema.Table{
		Name:       "auth_roles",
		Columns:    AuthRolesColumns,
		PrimaryKey: []*schema.Column{AuthRolesColumns[0]},
	}
	// AuthRulesColumns holds the columns for the "auth_rules" table.
	AuthRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AuthRulesTable holds the schema information for the "auth_rules" table.
	AuthRulesTable = &schema.Table{
		Name:       "auth_rules",
		Columns:    AuthRulesColumns,
		PrimaryKey: []*schema.Column{AuthRulesColumns[0]},
	}
	// EmailLogColumns holds the columns for the "email_log" table.
	EmailLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_by", Type: field.TypeUint64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeUint64, Default: 0},
		{Name: "email", Type: field.TypeString, Size: 128},
		{Name: "scope", Type: field.TypeString, Size: 32, Default: "common"},
		{Name: "type_id", Type: field.TypeUint64, Default: 0},
		{Name: "gateway", Type: field.TypeString, Size: 64, Default: "default"},
		{Name: "ip", Type: field.TypeString, Size: 16, Default: "127.0.0.1"},
		{Name: "from_name", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "from_address", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "title", Type: field.TypeString, Size: 255, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "content", Type: field.TypeString, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "data", Type: field.TypeString, Size: 1024, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "check_count", Type: field.TypeUint8, Default: 0},
		{Name: "status", Type: field.TypeUint, Default: 0},
		{Name: "return_msg", Type: field.TypeString, Size: 1024, Default: ""},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
	}
	// EmailLogTable holds the schema information for the "email_log" table.
	EmailLogTable = &schema.Table{
		Name:       "email_log",
		Columns:    EmailLogColumns,
		PrimaryKey: []*schema.Column{EmailLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "email_log_app_app",
				Columns:    []*schema.Column{EmailLogColumns[18]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "emaillog_app_id",
				Unique:  false,
				Columns: []*schema.Column{EmailLogColumns[18]},
			},
		},
	}
	// SmsLogColumns holds the columns for the "sms_log" table.
	SmsLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_by", Type: field.TypeUint64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeUint64, Default: 0},
		{Name: "dial_code", Type: field.TypeString, Size: 4, Default: "86"},
		{Name: "mobile", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "scope", Type: field.TypeString, Size: 32, Default: "common"},
		{Name: "type_id", Type: field.TypeUint64, Default: 0},
		{Name: "gateway", Type: field.TypeString, Size: 128, Default: "default"},
		{Name: "ip", Type: field.TypeString, Size: 16, Default: "127.0.0.1"},
		{Name: "template_id", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "template_text", Type: field.TypeString, Size: 1024, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "content", Type: field.TypeString, Size: 1024, Default: "", Collation: "utf8mb4_general_ci"},
		{Name: "check_count", Type: field.TypeUint8, Default: 0},
		{Name: "status", Type: field.TypeUint, Default: 0},
		{Name: "return_msg", Type: field.TypeString, Size: 1024, Default: ""},
		{Name: "app_id", Type: field.TypeUint64, Nullable: true},
	}
	// SmsLogTable holds the schema information for the "sms_log" table.
	SmsLogTable = &schema.Table{
		Name:       "sms_log",
		Columns:    SmsLogColumns,
		PrimaryKey: []*schema.Column{SmsLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sms_log_app_app",
				Columns:    []*schema.Column{SmsLogColumns[17]},
				RefColumns: []*schema.Column{AppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "smslog_app_id",
				Unique:  false,
				Columns: []*schema.Column{SmsLogColumns[17]},
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "delete_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_time", Type: field.TypeInt64, Default: 0},
		{Name: "create_by", Type: field.TypeUint64, Default: 0},
		{Name: "update_time", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeUint64, Default: 0},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "username", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "nickname", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "password", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "dial_code", Type: field.TypeString, Size: 4, Default: "86"},
		{Name: "mobile", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "mobile_hash", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "email", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "email_hash", Type: field.TypeString, Size: 32, Default: ""},
		{Name: "avatar", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "name", Type: field.TypeString, Size: 64, Default: ""},
		{Name: "sex", Type: field.TypeUint, Default: 0},
		{Name: "birthday", Type: field.TypeUint64, Default: 0},
		{Name: "age", Type: field.TypeUint, Default: 0},
		{Name: "last_login_ip", Type: field.TypeString, Size: 16, Default: "127.0.0.1"},
		{Name: "last_login_time", Type: field.TypeUint64, Default: 0},
		{Name: "status", Type: field.TypeUint, Default: 0},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppTable,
		AppOptionTable,
		AppUserTable,
		AppUserLoginLogTable,
		AppUserTokenTable,
		AuthAssgimentsTable,
		AuthItemsTable,
		AuthItemChildsTable,
		AuthRolesTable,
		AuthRulesTable,
		EmailLogTable,
		SmsLogTable,
		UserTable,
	}
)

func init() {
	AppTable.Annotation = &entsql.Annotation{
		Table: "app",
	}
	AppOptionTable.ForeignKeys[0].RefTable = AppTable
	AppOptionTable.Annotation = &entsql.Annotation{
		Table: "app_option",
	}
	AppUserTable.ForeignKeys[0].RefTable = AppTable
	AppUserTable.ForeignKeys[1].RefTable = UserTable
	AppUserTable.Annotation = &entsql.Annotation{
		Table: "app_user",
	}
	AppUserLoginLogTable.ForeignKeys[0].RefTable = AppTable
	AppUserLoginLogTable.ForeignKeys[1].RefTable = AppUserTable
	AppUserLoginLogTable.ForeignKeys[2].RefTable = UserTable
	AppUserLoginLogTable.Annotation = &entsql.Annotation{
		Table: "app_user_login_log",
	}
	AppUserTokenTable.ForeignKeys[0].RefTable = AppTable
	AppUserTokenTable.ForeignKeys[1].RefTable = AppUserTable
	AppUserTokenTable.ForeignKeys[2].RefTable = UserTable
	AppUserTokenTable.Annotation = &entsql.Annotation{
		Table: "app_user_token",
	}
	EmailLogTable.ForeignKeys[0].RefTable = AppTable
	EmailLogTable.Annotation = &entsql.Annotation{
		Table: "email_log",
	}
	SmsLogTable.ForeignKeys[0].RefTable = AppTable
	SmsLogTable.Annotation = &entsql.Annotation{
		Table: "sms_log",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
