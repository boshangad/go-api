// Code generated by entc, DO NOT EDIT.

package user

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldCreateBy holds the string denoting the create_by field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldUpdateBy holds the string denoting the update_by field in the database.
	FieldUpdateBy = "update_by"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldDialCode holds the string denoting the dial_code field in the database.
	FieldDialCode = "dial_code"
	// FieldMobile holds the string denoting the mobile field in the database.
	FieldMobile = "mobile"
	// FieldMobileHash holds the string denoting the mobile_hash field in the database.
	FieldMobileHash = "mobile_hash"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldEmailHash holds the string denoting the email_hash field in the database.
	FieldEmailHash = "email_hash"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSex holds the string denoting the sex field in the database.
	FieldSex = "sex"
	// FieldBirthday holds the string denoting the birthday field in the database.
	FieldBirthday = "birthday"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldLastLoginIP holds the string denoting the last_login_ip field in the database.
	FieldLastLoginIP = "last_login_ip"
	// FieldLastLoginTime holds the string denoting the last_login_time field in the database.
	FieldLastLoginTime = "last_login_time"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the user in the database.
	Table = "user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldDeleteTime,
	FieldCreateTime,
	FieldCreateBy,
	FieldUpdateTime,
	FieldUpdateBy,
	FieldUUID,
	FieldUsername,
	FieldNickname,
	FieldPassword,
	FieldDialCode,
	FieldMobile,
	FieldMobileHash,
	FieldEmail,
	FieldEmailHash,
	FieldAvatar,
	FieldName,
	FieldSex,
	FieldBirthday,
	FieldAge,
	FieldLastLoginIP,
	FieldLastLoginTime,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDeleteTime holds the default value on creation for the "delete_time" field.
	DefaultDeleteTime int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() int64
	// DefaultCreateBy holds the default value on creation for the "create_by" field.
	DefaultCreateBy uint64
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() int64
	// DefaultUpdateBy holds the default value on creation for the "update_by" field.
	DefaultUpdateBy uint64
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
	// DefaultUsername holds the default value on creation for the "username" field.
	DefaultUsername string
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// DefaultNickname holds the default value on creation for the "nickname" field.
	DefaultNickname string
	// NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	NicknameValidator func(string) error
	// DefaultPassword holds the default value on creation for the "password" field.
	DefaultPassword string
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
	// DefaultDialCode holds the default value on creation for the "dial_code" field.
	DefaultDialCode string
	// DialCodeValidator is a validator for the "dial_code" field. It is called by the builders before save.
	DialCodeValidator func(string) error
	// DefaultMobile holds the default value on creation for the "mobile" field.
	DefaultMobile string
	// MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	MobileValidator func(string) error
	// DefaultMobileHash holds the default value on creation for the "mobile_hash" field.
	DefaultMobileHash string
	// MobileHashValidator is a validator for the "mobile_hash" field. It is called by the builders before save.
	MobileHashValidator func(string) error
	// DefaultEmail holds the default value on creation for the "email" field.
	DefaultEmail string
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// DefaultEmailHash holds the default value on creation for the "email_hash" field.
	DefaultEmailHash string
	// EmailHashValidator is a validator for the "email_hash" field. It is called by the builders before save.
	EmailHashValidator func(string) error
	// DefaultAvatar holds the default value on creation for the "avatar" field.
	DefaultAvatar string
	// AvatarValidator is a validator for the "avatar" field. It is called by the builders before save.
	AvatarValidator func(string) error
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultSex holds the default value on creation for the "sex" field.
	DefaultSex uint
	// SexValidator is a validator for the "sex" field. It is called by the builders before save.
	SexValidator func(uint) error
	// DefaultBirthday holds the default value on creation for the "birthday" field.
	DefaultBirthday uint64
	// DefaultAge holds the default value on creation for the "age" field.
	DefaultAge uint
	// DefaultLastLoginIP holds the default value on creation for the "last_login_ip" field.
	DefaultLastLoginIP string
	// LastLoginIPValidator is a validator for the "last_login_ip" field. It is called by the builders before save.
	LastLoginIPValidator func(string) error
	// DefaultLastLoginTime holds the default value on creation for the "last_login_time" field.
	DefaultLastLoginTime uint64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint
)

const (
	// StatusDisabled 禁用
	StatusDisabled = 0
	// StatusWaitPublish 待激活
	StatusWaitPublish = 1
	// StatusPublished 激活
	StatusPublished = 10
)
